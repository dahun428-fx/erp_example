<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sample.app.dao.StaffDao">
	<sql id="pagingHeaderSql">
		<![CDATA[
		select B.*
		from (
		        select rownum as rnum, A.*
		        from(
		]]>        
	</sql>
	
	<sql id="pagingFooterSql">
		 <![CDATA[
		 ) A where rownum <= #{pagination.endIndex}
			) B
			where B.rnum >= #{pagination.beginIndex}
		]]>
	</sql>
	<sql id="searchSql">
			<where>
				<if test="searchForm.name != '' ">
					AND STAFF_NAME LIKE '%'||#{searchForm.name}||'%'
				</if>
				<if test="searchForm.gender.size() != 0 ">
					AND SUBSTR(JUMIN_NO,8,1) IN
					<foreach collection="searchForm.gender" item="item" open="(" close=")" separator=",">
						CASE
							WHEN #{item} = 'male' then '1'
							ELSE  '2'
						END,
						CASE
							WHEN #{item} = 'male' then '3'
							ELSE  '4'
						END
					</foreach>
				</if>
				<if test="searchForm.education.size() != 0">
					AND SCHOOL_CODE IN
					<foreach collection="searchForm.education" item="item" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				<if test="searchForm.department != '' ">
					AND DEPARTMENT_CODE IN #{searchForm.department}
				</if>
				<if test="searchForm.education != null">
					AND SCHOOL_CODE IN #{searchForm.education}
				</if>
		
			</where>
	</sql>
	
	<select id="getAllStaff" parameterType="map" resultType="Staff">
		<if test="pagination != null">
			<include refid="pagingHeaderSql" />
		</if>
		
		SELECT 
			STAFF_NO 		AS "no",
			STAFF_NAME 		AS "name",
			JUMIN_NO 		AS "juminNo",
			SCHOOL_CODE 	AS "school.code",
			DEPARTMENT_CODE AS "department.code",
			GRADUATE_DAY 	AS "graduateDay"
		FROM
			STAFF
		<if test="searchForm != null">
			<include refid="searchSql" />
		</if>
		ORDER BY STAFF_NO ASC
		<if test="pagination != null">
			<include refid="pagingFooterSql" />
		</if>
		
		
	</select>
	<select id="totalStaffCounts" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			STAFF
		<include refid="searchSql" />	
	</select>
	
	
	
	
	
	
	<insert id="add" parameterType="Staff" useGeneratedKeys="true" keyProperty="no">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
  		 	 select staff_seq.nextval FROM DUAL
 		 </selectKey>
		
		INSERT INTO staff
		(staff_no, staff_name, jumin_no, school_code, department_code, graduate_day)
		VALUES
		(#{no}, #{name}, #{juminNo}, #{school.code}, #{department.code}, #{graduateDay})
	</insert>

</mapper>
